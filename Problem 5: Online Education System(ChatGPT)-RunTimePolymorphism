class User {
	
	public void accessPortal() {
		System.out.println("Accessing generic portal…");
	}
	
}


class Student extends User{
	
	@Override
	public void accessPortal() {
		System.out.println("Student dashboard accessed.");
	}
	
}


class Instructor extends User{
	
	@Override
	public void accessPortal() {
		System.out.println("Instructor dashboard accessed.");
	}
	
}


public class Main {

	public static void main(String[] args) {
		
		User user=new User();
		User student=new Student();
		User instructor=new Instructor();
		
		user.accessPortal();
		student.accessPortal();
		instructor.accessPortal();
		
	}

}



#Description:

-->Base Class: User
-->Subclass: Student, Instructor
Concept: Override accessPortal() based on user type.

Methods to Define:

In User:
void accessPortal() → print “Accessing generic portal…”

In Student:
Override accessPortal() → print “Student dashboard accessed.”

In Instructor:
Override accessPortal() → print “Instructor dashboard accessed.”

Instructions:
Demonstrate polymorphism via a method that takes User reference and shows role-specific behavior.
